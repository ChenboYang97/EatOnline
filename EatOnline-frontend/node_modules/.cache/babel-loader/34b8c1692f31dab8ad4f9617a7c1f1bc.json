{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\yangm\\\\Desktop\\\\EatOnlien-frontend\\\\eatonline\\\\src\\\\components\\\\SignupForm.js\";\nimport { Button, Form, Input, message, Modal } from \"antd\";\nimport React from \"react\";\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\nimport { signup } from \"../utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass SignUpForm extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      displayModal: false\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        displayModal: false\n      });\n    };\n\n    this.signupOnClick = () => {\n      this.setState({\n        displayModal: true\n      });\n    };\n\n    this.onFinish = data => {\n      signup(data).then(() => {\n        this.setState({\n          displayModal: false\n        });\n        message.success(\"Registration Successful!\");\n      }).catch(error => {\n        message.error(error);\n      }).finally(() => {\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.render = () => {\n      return (\n        /*#__PURE__*/\n        // <Form\n        //     name=\"normal_signup\"\n        //     initialValues={{\n        //         remember: true,\n        //     }}\n        //     onFinish={ this.onFinish }\n        //     autoComplete=\"off\"\n        // >\n        //     <Form.Item\n        //         label=\"Username\"\n        //         name=\"username\"\n        //         rules={[\n        //         {\n        //             required: true,\n        //             message: 'Please input your username!',\n        //         },\n        //         ]}\n        //     >\n        //         <Input prefix = { <UserOutlined /> }/>\n        //     </Form.Item>\n        //     <Form.Item\n        //         name=\"password\"\n        //         label=\"Password\"\n        //         rules={[\n        //         {\n        //             required: true,\n        //             message: 'Please input your password!',\n        //         },\n        //         ]}\n        //         hasFeedback\n        //     >\n        //         <Input.Password />\n        //     </Form.Item>\n        //     <Form.Item\n        //         name=\"confirm\"\n        //         label=\"Confirm Password\"\n        //         dependencies={['password']}\n        //         hasFeedback\n        //         rules={[\n        //         {\n        //             required: true,\n        //             message: 'Please confirm your password!',\n        //         },\n        //         ({ getFieldValue }) => ({\n        //             validator(_, value) {\n        //             if (!value || getFieldValue('password') === value) {\n        //                 return Promise.resolve();\n        //             }\n        //             return Promise.reject(new Error('The two passwords that you entered do not match!'));\n        //             },\n        //         }),\n        //         ]}\n        //     >\n        //         <Input.Password />\n        //     </Form.Item>\n        //     <Form.Item\n        //         wrapperCol={{\n        //         offset: 8,\n        //         span: 16,\n        //         }}\n        //     >\n        //         <Button type=\"primary\" htmlType=\"submit\" loading = { this.state.loading }>\n        //         Sign Up\n        //         </Button>\n        //     </Form.Item>\n        // </Form>\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            shape: \"round\",\n            type: \"primary\",\n            onClick: this.signupOnClick,\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Modal, {\n            title: \"Register\",\n            visible: this.state.displayModal,\n            onCancel: this.handleCancel,\n            footer: null,\n            destroyOnClose: true,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              name: \"normal_register\",\n              initialValues: {\n                remember: true\n              },\n              onFinish: this.onFinish,\n              preserve: false,\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"email\",\n                rules: [{\n                  required: true,\n                  message: \"Please input your email!\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  prefix: /*#__PURE__*/_jsxDEV(UserOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 36\n                  }, this),\n                  placeholder: \"Email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"password\",\n                rules: [{\n                  required: true,\n                  message: \"Please input your password!\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  prefix: /*#__PURE__*/_jsxDEV(LockOutlined, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 36\n                  }, this),\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"firstName\",\n                rules: [{\n                  required: true,\n                  message: \"Please input your first name!\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"firstname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"lastName\",\n                rules: [{\n                  required: true,\n                  message: \"Please input your last name!\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"lastname\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  htmlType: \"submit\",\n                  children: \"Register\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      );\n    };\n  }\n\n}\n\nexport default SignUpForm;","map":{"version":3,"names":["Button","Form","Input","message","Modal","React","UserOutlined","LockOutlined","signup","SignUpForm","Component","state","displayModal","handleCancel","setState","signupOnClick","onFinish","data","then","success","catch","error","finally","loading","render","remember","required"],"sources":["C:/Users/yangm/Desktop/EatOnlien-frontend/eatonline/src/components/SignupForm.js"],"sourcesContent":["import { Button, Form, Input, message, Modal } from \"antd\";\r\nimport React from \"react\";\r\nimport { UserOutlined, LockOutlined } from \"@ant-design/icons\";\r\nimport { signup } from \"../utils\";\r\n\r\nclass SignUpForm extends React.Component {\r\n    state = {\r\n        displayModal: false,\r\n    };\r\n\r\n    handleCancel = () => {\r\n        this.setState({\r\n            displayModal: false,\r\n        });\r\n    };\r\n\r\n    signupOnClick = () => {\r\n        this.setState({\r\n            displayModal: true,\r\n        });\r\n    };\r\n\r\n    onFinish = (data) => {\r\n        signup(data)\r\n            .then(() => {\r\n                this.setState({\r\n                    displayModal: false,\r\n                })\r\n                message.success(\"Registration Successful!\");\r\n            })\r\n            .catch(error => {\r\n                message.error(error);\r\n            })\r\n            .finally(() => {\r\n                this.setState({\r\n                    loading: false,\r\n                })\r\n            })\r\n    }\r\n\r\n    render = () => {\r\n        return (\r\n            // <Form\r\n            //     name=\"normal_signup\"\r\n            //     initialValues={{\r\n            //         remember: true,\r\n            //     }}\r\n            //     onFinish={ this.onFinish }\r\n            //     autoComplete=\"off\"\r\n            // >\r\n            //     <Form.Item\r\n            //         label=\"Username\"\r\n            //         name=\"username\"\r\n            //         rules={[\r\n            //         {\r\n            //             required: true,\r\n            //             message: 'Please input your username!',\r\n            //         },\r\n            //         ]}\r\n            //     >\r\n            //         <Input prefix = { <UserOutlined /> }/>\r\n            //     </Form.Item>\r\n\r\n            //     <Form.Item\r\n            //         name=\"password\"\r\n            //         label=\"Password\"\r\n            //         rules={[\r\n            //         {\r\n            //             required: true,\r\n            //             message: 'Please input your password!',\r\n            //         },\r\n            //         ]}\r\n            //         hasFeedback\r\n            //     >\r\n            //         <Input.Password />\r\n            //     </Form.Item>\r\n\r\n            //     <Form.Item\r\n            //         name=\"confirm\"\r\n            //         label=\"Confirm Password\"\r\n            //         dependencies={['password']}\r\n            //         hasFeedback\r\n            //         rules={[\r\n            //         {\r\n            //             required: true,\r\n            //             message: 'Please confirm your password!',\r\n            //         },\r\n            //         ({ getFieldValue }) => ({\r\n            //             validator(_, value) {\r\n            //             if (!value || getFieldValue('password') === value) {\r\n            //                 return Promise.resolve();\r\n            //             }\r\n\r\n            //             return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n            //             },\r\n            //         }),\r\n            //         ]}\r\n            //     >\r\n            //         <Input.Password />\r\n            //     </Form.Item>\r\n\r\n            //     <Form.Item\r\n            //         wrapperCol={{\r\n            //         offset: 8,\r\n            //         span: 16,\r\n            //         }}\r\n            //     >\r\n            //         <Button type=\"primary\" htmlType=\"submit\" loading = { this.state.loading }>\r\n            //         Sign Up\r\n            //         </Button>\r\n            //     </Form.Item>\r\n            // </Form>\r\n            <>\r\n                <Button shape=\"round\" type=\"primary\" onClick={this.signupOnClick}>\r\n                Register\r\n                </Button>\r\n                <Modal\r\n                title=\"Register\"\r\n                visible={this.state.displayModal}\r\n                onCancel={this.handleCancel}\r\n                footer={null}\r\n                destroyOnClose={true}\r\n                >\r\n                <Form\r\n                    name=\"normal_register\"\r\n                    initialValues={{ remember: true }}\r\n                    onFinish={this.onFinish}\r\n                    preserve={false}\r\n                >\r\n                    <Form.Item\r\n                    name=\"email\"\r\n                    rules={[{ required: true, message: \"Please input your email!\" }]}\r\n                    >\r\n                    <Input prefix={<UserOutlined />} placeholder=\"Email\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                    name=\"password\"\r\n                    rules={[\r\n                        { required: true, message: \"Please input your password!\" },\r\n                    ]}\r\n                    >\r\n                    <Input prefix={<LockOutlined />} placeholder=\"Password\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                    name=\"firstName\"\r\n                    rules={[\r\n                        { required: true, message: \"Please input your first name!\" },\r\n                    ]}\r\n                    >\r\n                    <Input placeholder=\"firstname\" />\r\n                    </Form.Item>\r\n                    <Form.Item\r\n                    name=\"lastName\"\r\n                    rules={[\r\n                        { required: true, message: \"Please input your last name!\" },\r\n                    ]}\r\n                    >\r\n                    <Input placeholder=\"lastname\" />\r\n                    </Form.Item>\r\n        \r\n                    <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Register\r\n                    </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                </Modal>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SignUpForm;"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,OAA9B,EAAuCC,KAAvC,QAAoD,MAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,mBAA3C;AACA,SAASC,MAAT,QAAuB,UAAvB;;;;AAEA,MAAMC,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;EAAA;IAAA;IAAA,KACrCC,KADqC,GAC7B;MACJC,YAAY,EAAE;IADV,CAD6B;;IAAA,KAKrCC,YALqC,GAKtB,MAAM;MACjB,KAAKC,QAAL,CAAc;QACVF,YAAY,EAAE;MADJ,CAAd;IAGH,CAToC;;IAAA,KAWrCG,aAXqC,GAWrB,MAAM;MAClB,KAAKD,QAAL,CAAc;QACVF,YAAY,EAAE;MADJ,CAAd;IAGH,CAfoC;;IAAA,KAiBrCI,QAjBqC,GAiBzBC,IAAD,IAAU;MACjBT,MAAM,CAACS,IAAD,CAAN,CACKC,IADL,CACU,MAAM;QACR,KAAKJ,QAAL,CAAc;UACVF,YAAY,EAAE;QADJ,CAAd;QAGAT,OAAO,CAACgB,OAAR,CAAgB,0BAAhB;MACH,CANL,EAOKC,KAPL,CAOWC,KAAK,IAAI;QACZlB,OAAO,CAACkB,KAAR,CAAcA,KAAd;MACH,CATL,EAUKC,OAVL,CAUa,MAAM;QACX,KAAKR,QAAL,CAAc;UACVS,OAAO,EAAE;QADC,CAAd;MAGH,CAdL;IAeH,CAjCoC;;IAAA,KAmCrCC,MAnCqC,GAmC5B,MAAM;MACX;QAAA;QACI;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;UAAA,wBACI,QAAC,MAAD;YAAQ,KAAK,EAAC,OAAd;YAAsB,IAAI,EAAC,SAA3B;YAAqC,OAAO,EAAE,KAAKT,aAAnD;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAII,QAAC,KAAD;YACA,KAAK,EAAC,UADN;YAEA,OAAO,EAAE,KAAKJ,KAAL,CAAWC,YAFpB;YAGA,QAAQ,EAAE,KAAKC,YAHf;YAIA,MAAM,EAAE,IAJR;YAKA,cAAc,EAAE,IALhB;YAAA,uBAOA,QAAC,IAAD;cACI,IAAI,EAAC,iBADT;cAEI,aAAa,EAAE;gBAAEY,QAAQ,EAAE;cAAZ,CAFnB;cAGI,QAAQ,EAAE,KAAKT,QAHnB;cAII,QAAQ,EAAE,KAJd;cAAA,wBAMI,QAAC,IAAD,CAAM,IAAN;gBACA,IAAI,EAAC,OADL;gBAEA,KAAK,EAAE,CAAC;kBAAEU,QAAQ,EAAE,IAAZ;kBAAkBvB,OAAO,EAAE;gBAA3B,CAAD,CAFP;gBAAA,uBAIA,QAAC,KAAD;kBAAO,MAAM,eAAE,QAAC,YAAD;oBAAA;oBAAA;oBAAA;kBAAA,QAAf;kBAAiC,WAAW,EAAC;gBAA7C;kBAAA;kBAAA;kBAAA;gBAAA;cAJA;gBAAA;gBAAA;gBAAA;cAAA,QANJ,eAYI,QAAC,IAAD,CAAM,IAAN;gBACA,IAAI,EAAC,UADL;gBAEA,KAAK,EAAE,CACH;kBAAEuB,QAAQ,EAAE,IAAZ;kBAAkBvB,OAAO,EAAE;gBAA3B,CADG,CAFP;gBAAA,uBAMA,QAAC,KAAD;kBAAO,MAAM,eAAE,QAAC,YAAD;oBAAA;oBAAA;oBAAA;kBAAA,QAAf;kBAAiC,WAAW,EAAC;gBAA7C;kBAAA;kBAAA;kBAAA;gBAAA;cANA;gBAAA;gBAAA;gBAAA;cAAA,QAZJ,eAoBI,QAAC,IAAD,CAAM,IAAN;gBACA,IAAI,EAAC,WADL;gBAEA,KAAK,EAAE,CACH;kBAAEuB,QAAQ,EAAE,IAAZ;kBAAkBvB,OAAO,EAAE;gBAA3B,CADG,CAFP;gBAAA,uBAMA,QAAC,KAAD;kBAAO,WAAW,EAAC;gBAAnB;kBAAA;kBAAA;kBAAA;gBAAA;cANA;gBAAA;gBAAA;gBAAA;cAAA,QApBJ,eA4BI,QAAC,IAAD,CAAM,IAAN;gBACA,IAAI,EAAC,UADL;gBAEA,KAAK,EAAE,CACH;kBAAEuB,QAAQ,EAAE,IAAZ;kBAAkBvB,OAAO,EAAE;gBAA3B,CADG,CAFP;gBAAA,uBAMA,QAAC,KAAD;kBAAO,WAAW,EAAC;gBAAnB;kBAAA;kBAAA;kBAAA;gBAAA;cANA;gBAAA;gBAAA;gBAAA;cAAA,QA5BJ,eAqCI,QAAC,IAAD,CAAM,IAAN;gBAAA,uBACA,QAAC,MAAD;kBAAQ,IAAI,EAAC,SAAb;kBAAuB,QAAQ,EAAC,QAAhC;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA;cADA;gBAAA;gBAAA;gBAAA;cAAA,QArCJ;YAAA;cAAA;cAAA;cAAA;YAAA;UAPA;YAAA;YAAA;YAAA;UAAA,QAJJ;QAAA;MAvEJ;IAgIH,CApKoC;EAAA;;AAAA;;AAuKzC,eAAeM,UAAf"},"metadata":{},"sourceType":"module"}